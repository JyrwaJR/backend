generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Token {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  token     String    @unique
  expiresAt DateTime
  issuedAt  DateTime  @default(now())
  revokedAt DateTime? // Nullable: Track revoked tokens
  authId    String    @db.ObjectId
  auth      Auth      @relation(fields: [authId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Auth {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String?
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokens    Token[] // Allow multiple tokens per auth
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  isVerified Boolean  @default(false)
  role       Role     @default(CLIENT)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  auth       Auth?

  @@index([id, role, name])
}

enum Role {
  ADMIN
  CLIENT
  DELIVERY
}
